<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="com.yxlg.webservice">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>

    <mvc:annotation-driven/>

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
        	<!-- <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.yuandian.c2mbase.util.HibernateObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
				<property name="objectMapper" value="#{jsonUtil.mapper}" />
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean> -->
			
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
            	<property name="writeAcceptCharset" value="false" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
            	<property name="objectMapper" value="#{jsonUtil.mapper}"/>  
         		<property name="supportedMediaTypes">  
                <list>
<!--                 	<value>text/plain;charset=UTF-8</value> -->
<!--                     <value>text/html;charset=UTF-8</value> -->
                    <value>application/json;charset=UTF-8</value>  
                </list>
            </property>    
        	</bean> 
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--Spring3.1开始的注解 HandlerMapping -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <!--Spring3.1开始的注解 HandlerAdapter -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />

    <!-- 视图解释类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>
    
    <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- 对静态资源文件的访问 方案一 （二选一）  -->
    <mvc:default-servlet-handler />

    <mvc:view-controller path="/" view-name="forward:/WEB-INF/views/main/login.jsp" />
    
   <!--  <mvc:interceptors>
    	<mvc:interceptor>    
	        <mvc:mapping path="/tailor/**" />  
	        <ref bean="wxSessionFilter" />    
	    </mvc:interceptor>    
	    <mvc:interceptor>    
	        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
	        <mvc:mapping path="/**" />  
	        <ref bean="responseHeadVersionInterceptor" />    
	    </mvc:interceptor>  
	    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
	</mvc:interceptors> 
     -->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
    
    <!-- 国际化的配置 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	    <!-- 国际化信息所在的文件名 -->                     
	    <property name="basename" value="i18n/messages" />   
	    <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
	    <property name="useCodeAsDefaultMessage" value="true" />           
	</bean>

	<mvc:cors>
		<mvc:mapping path="/api/v1/**" allowed-origins="*.magicmanufactory.com"
			allowed-methods="OPTIONS, GET, POST, DELETE, PUT" />
		<mvc:mapping path="/api/v2/**" allowed-origins="*.magicmanufactory.com"
			allowed-methods="OPTIONS, GET, POST, DELETE, PUT" />
		<mvc:mapping path="/api/v1/**" allowed-origins="*.cotte.cn"
			allowed-methods="OPTIONS, GET, POST, DELETE, PUT" />
		<mvc:mapping path="/api/v2/**" allowed-origins="*.cotte.cn"
			allowed-methods="OPTIONS, GET, POST, DELETE, PUT" />
		<mvc:mapping path="/api/v1/**" allowed-origins="*"
			allowed-methods="OPTIONS, GET, POST, DELETE, PUT" />
		<mvc:mapping path="/api/v2/**" allowed-origins="*"
			allowed-methods="OPTIONS, GET, POST, DELETE, PUT" />
	</mvc:cors>
</beans>